<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="risk.engine.db.dao.QueueFailedMessageMapper">

    <resultMap id="BaseResultMap" type="risk.engine.db.entity.QueueFailedMessagePO">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="topic" jdbcType="VARCHAR" property="topic" />
        <result column="partition" jdbcType="INTEGER" property="partition" />
        <result column="offset" jdbcType="BIGINT" property="offset" />
        <result column="original_key" jdbcType="VARCHAR" property="originalKey" />
        <result column="key" jdbcType="VARCHAR" property="key" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="message" jdbcType="LONGVARCHAR" property="message" />
        <result column="error_message" jdbcType="LONGVARCHAR" property="errorMessage" />
        <result column="status" jdbcType="TINYINT" property="status" />
        <result column="retry" jdbcType="TINYINT" property="retry" />
        <result column="max_retry" jdbcType="TINYINT" property="maxRetry" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    </resultMap>

    <sql id="Base_Column_List">
        id, topic, `partition`, offset, original_key, `key`, type, message, error_message, status, retry, max_retry, create_time, update_time
    </sql>

    <select id="selectByStatus" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from queue_failed_messages
        where status = #{status}
        order by create_time desc
        limit 1000
    </select>

    <insert id="insert" parameterType="risk.engine.db.entity.QueueFailedMessagePO">
        insert ignore into queue_failed_messages (
            topic, `partition`, offset, original_key, `key`, type, message, error_message,
            status, retry, max_retry, create_time, update_time)
        values (
                   #{topic,jdbcType=VARCHAR}, #{partition,jdbcType=INTEGER}, #{offset,jdbcType=BIGINT}, #{originalKey,jdbcType=VARCHAR},
                   #{key,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{message,jdbcType=LONGVARCHAR},
                   #{errorMessage,jdbcType=LONGVARCHAR}, #{status,jdbcType=TINYINT}, #{retry,jdbcType=TINYINT},
                   #{maxRetry,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <update id="updateById" parameterType="risk.engine.db.entity.QueueFailedMessagePO">
        update queue_failed_messages
        set status = #{status,jdbcType=TINYINT},
            retry = #{retry,jdbcType=TINYINT},
            update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>

</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="risk.engine.db.dao.CounterMetricMapper">

    <resultMap id="BaseResultMap" type="risk.engine.db.entity.CounterMetricPO">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="metric_code" jdbcType="VARCHAR" property="metricCode" />
        <result column="metric_name" jdbcType="VARCHAR" property="metricName" />
        <result column="metric_type" jdbcType="TINYINT" property="metricType" />
        <result column="incident_code" jdbcType="VARCHAR" property="incidentCode" />
        <result column="incident_code_list" jdbcType="VARCHAR" property="incidentCodeList" />
        <result column="attribute_key" jdbcType="VARCHAR" property="attributeKey" />
        <result column="window_size" jdbcType="VARCHAR" property="windowSize" />
        <result column="aggregation_type" jdbcType="VARCHAR" property="aggregationType" />
        <result column="window_type" jdbcType="VARCHAR" property="windowType" />
        <result column="groovy_script" jdbcType="VARCHAR" property="groovyScript" />
        <result column="status" jdbcType="TINYINT" property="status" />
        <result column="description" jdbcType="VARCHAR" property="description" />
        <result column="operator" jdbcType="VARCHAR" property="operator" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    </resultMap>

    <sql id="Base_Column_List">
        id, metric_code, metric_name, metric_type, incident_code, incident_code_list, attribute_key, window_size, aggregation_type,
        window_type, groovy_script, status, description, operator, create_time, update_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from counter_metric
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectByExample" parameterType="risk.engine.db.entity.CounterMetricPO" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from counter_metric
        <where>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT}
            </if>
            <if test="incidentCode != null and incidentCode != ''" >
                and incident_code = #{incidentCode,jdbcType=VARCHAR}
            </if>
            <if test="metricCode != null and metricCode != ''" >
                and metric_code = #{metricCode,jdbcType=VARCHAR}
            </if>
            <if test="metricName != null and metricName != ''" >
                and metric_name = #{metricName,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <insert id="insert" parameterType="risk.engine.db.entity.CounterMetricPO">
        insert into counter_metric (
            metric_code, metric_name, metric_type,incident_code, incident_code_list, attribute_key,
            window_size, aggregation_type, window_type, groovy_script,
            status, description, operator, create_time, update_time
        ) values (
                     #{metricCode,jdbcType=VARCHAR}, #{metricName,jdbcType=VARCHAR}, #{metricType,jdbcType=TINYINT}, #{incidentCode,jdbcType=VARCHAR}, #{incidentCodeList,jdbcType=VARCHAR},
                     #{attributeKey,jdbcType=VARCHAR}, #{windowSize,jdbcType=VARCHAR}, #{aggregationType,jdbcType=VARCHAR}, #{windowType,jdbcType=VARCHAR}, #{groovyScript,jdbcType=VARCHAR},
                     #{status,jdbcType=TINYINT}, #{description,jdbcType=VARCHAR},  #{operator,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
                 )
    </insert>

    <update id="updateByPrimaryKey" parameterType="risk.engine.db.entity.CounterMetricPO">
        update counter_metric
        set
            metric_name = #{metricName,jdbcType=VARCHAR},
            window_size = #{windowSize,jdbcType=VARCHAR},
            aggregation_type = #{aggregationType,jdbcType=VARCHAR},
            window_type = #{windowType,jdbcType=VARCHAR},
            groovy_script = #{groovyScript,jdbcType=VARCHAR},
            status = #{status,jdbcType=TINYINT},
            description = #{description,jdbcType=VARCHAR},
            operator = #{operator,jdbcType=VARCHAR},
            update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from counter_metric
        where id = #{id,jdbcType=BIGINT}
    </delete>

</mapper>
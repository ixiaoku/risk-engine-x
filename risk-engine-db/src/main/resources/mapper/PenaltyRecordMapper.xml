<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="risk.engine.db.dao.PenaltyRecordMapper">
  <resultMap id="BaseResultMap" type="risk.engine.db.entity.PenaltyRecordPO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="flow_no" jdbcType="VARCHAR" property="flowNo" />
    <result column="rule_code" jdbcType="VARCHAR" property="ruleCode" />
    <result column="rule_name" jdbcType="VARCHAR" property="ruleName" />
    <result column="incident_code" jdbcType="VARCHAR" property="incidentCode" />
    <result column="incident_name" jdbcType="VARCHAR" property="incidentName" />
    <result column="penalty_code" jdbcType="VARCHAR" property="penaltyCode" />
    <result column="penalty_name" jdbcType="VARCHAR" property="penaltyName" />
    <result column="penalty_def" jdbcType="VARCHAR" property="penaltyDef" />
    <result column="penalty_reason" jdbcType="VARCHAR" property="penaltyReason" />
    <result column="penalty_result" jdbcType="VARCHAR" property="penaltyResult" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="retry" jdbcType="INTEGER" property="retry" />
    <result column="penalty_time" jdbcType="TIMESTAMP" property="penaltyTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="risk.engine.db.entity.PenaltyRecordPO">
    <result column="penalty_description" jdbcType="LONGVARCHAR" property="penaltyDescription" />
    <result column="penalty_json" jdbcType="LONGVARCHAR" property="penaltyJson" />
  </resultMap>
  <sql id="Base_Column_List">
    id, flow_no, rule_code, rule_name, incident_code, incident_name, penalty_code, penalty_name,
    penalty_def, penalty_reason, penalty_result, status, retry, penalty_description, penalty_json,
    penalty_time, create_time, update_time
  </sql>

  <select id="selectExample" parameterType="risk.engine.db.entity.PenaltyRecordPO" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    from penalty_record
    <where>
      <if test="status != null">
        status = #{status,jdbcType=BIT}
      </if>
      <if test="retry != null">
        and retry &lt; #{retry,jdbcType=INTEGER}
      </if>
    </where>
  </select>

  <insert id="batchInsert" parameterType="java.util.List">
    insert into penalty_record (id, flow_no, rule_code, rule_name, incident_code, incident_name,
    penalty_code, penalty_name, penalty_def, penalty_reason, penalty_result, status,
    retry, penalty_time, create_time, update_time, penalty_description, penalty_json)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.flowNo,jdbcType=VARCHAR}, #{item.ruleCode,jdbcType=VARCHAR},
      #{item.ruleName,jdbcType=VARCHAR}, #{item.incidentCode,jdbcType=VARCHAR}, #{item.incidentName,jdbcType=VARCHAR},
      #{item.penaltyCode,jdbcType=VARCHAR}, #{item.penaltyName,jdbcType=VARCHAR}, #{item.penaltyDef,jdbcType=VARCHAR},
      #{item.penaltyReason,jdbcType=VARCHAR}, #{item.penaltyResult,jdbcType=VARCHAR}, #{item.status,jdbcType=BIT},
      #{item.retry,jdbcType=INTEGER}, #{item.penaltyTime,jdbcType=TIMESTAMP}, #{item.createTime,jdbcType=TIMESTAMP},
      #{item.updateTime,jdbcType=TIMESTAMP}, #{item.penaltyDescription,jdbcType=LONGVARCHAR}, #{item.penaltyJson,jdbcType=LONGVARCHAR})
    </foreach>
  </insert>

  <update id="updateByPrimaryKey" parameterType="risk.engine.db.entity.PenaltyRecordPO">
    update penalty_record
    set penalty_result = #{penaltyResult,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      retry = #{retry,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>